[toolchains]
arm = arm-none-linux-gnueabi
uboot = uboot-tools
dtc = device-tree-compiler
bootgen = mkbootimage

[targets]
Linux = true
U-Boot = true
Buildroot = true
RTLinux = False

[Linux]
repository = xilinx-linux

[Linux-parallelbuild]
defconfig = make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- xilinx_zynq_defconfig
kernel = make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- LOADADDR=0x8000 uImage
dtb = make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- dtbs
modules = make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- modules
modules_install = make INSTALL_MOD_PATH={ebe_overlays} ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- modules_install

[Linux-copyfiles]
uImage = arch/arm/boot/uImage
configs/kernel_dotconfig = .config
devicetree.dtb = arch/arm/boot/dts/zynq-mars-zx3.dtb

[Linux-help]
description = the Linux kernel.

[U-Boot]
repository = xilinx-uboot

[U-Boot-help]
description = the U-Boot bootloader.

[U-Boot-parallelbuild]
defconfig = make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- zynq_mars_zx3_defconfig
elf = make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi-

[U-Boot-copyfiles]
configs/uboot_dotconfig = .config
u-boot.elf = u-boot
uboot.scr = bscripts/uboot.scr
uboot_ramdisk.scr = bscripts/uboot_ramdisk.scr

[Buildroot]
repository = buildroot-rootfs
priority = 100

[Buildroot-parallelbuild]
defconfig = make enclustra_xilinx_defconfig
rootfs = make EBE_OVERLAYS={ebe_overlays}

[Buildroot-copyfiles]
configs/buildroot_dotconfig = .config
rootfs.tar = output/images/rootfs.tar
uramdisk = output/images/rootfs.cpio.uboot

[Buildroot-help]
description = the Buildroot rootfs.

[RTLinux]
repository = xilinx-linux-rt
branch = rt

[RTLinux-parallelbuild]
defconfig = make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- xilinx_zynq_defconfig
kernel = make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- LOADADDR=0x8000 uImage
dtb = make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- dtbs

[RTLinux-copyfiles]
uImage-rt = arch/arm/boot/uImage
configs/rtkernel_dotconfig = .config
devicetree.dtb = arch/arm/boot/dts/zynq-mars-zx3.dtb

[RTLinux-help]
description = the Linux kernel (realtime configuration).

[bootimage]
bootimage = mkbootimage boot.bif boot.bin

[bootimage-required-files]
boot.bif = true
fsbl.elf = true
fpga.bit = true
u-boot.elf = true

[bootimage-result-files]
boot.bin = true

[clean]
Linux = make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- distclean
RTLinux = make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- distclean
U-Boot = make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- distclean
Buildroot = make distclean

[binaries-non-modifiable]
boot.bif = true
boot_full_ramdisk.bif = true
boot_full.bif = true

[U-Boot-build]
bootscript = mkimage -A arm -O linux -T script -C none -a 0 -e 0 -n "Uboot mmc start script" -d bscripts/mmcboot-rootfs bscripts/uboot.scr
bootscript_ramdisk = mkimage -A arm -O linux -T script -C none -a 0 -e 0 -n "Uboot mmc start script" -d bscripts/mmcboot-ramdisk bscripts/uboot_ramdisk.scr

[boot_files_industrial_20_2-copyfiles-default]
fsbl.elf = fsbl.elf
fpga.bit = fpga.bit
boot.bif = boot.bif

[boot_files_industrial_20_1-copyfiles-default]
fsbl.elf = fsbl.elf
fpga.bit = fpga.bit
boot.bif = boot.bif

[U-Boot-options]
build = False
build_steps = bootscript,bootscript_ramdisk
parallelbuild_steps = elf

[Buildroot-options]
build = False
build_steps = 
parallelbuild_steps = rootfs

[RTLinux-options]
build = False
build_steps = 
parallelbuild_steps = kernel,dtb

[Linux-options]
build = False
build_steps = 
parallelbuild_steps = kernel,dtb,modules,modules_install

[project]
name = femii_linux
path = /targets/Zynq-7000/Mars_ZX3/Mars_PM3/MMC

